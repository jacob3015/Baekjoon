"""B 1309 동물월(Zoo)
Problem:
    어떤 동물원에 가로로 두칸 세로로 N칸인 우리가 있다.
    이 동물원에는 사자들이 살고 있는데 사자들을 우리에 가둘 때, 가로로도 세로로도 붙어 있게 배치할 수는 없다.
    이 동물원 조련사는 사자들의 배치 문제 때문에 골머리를 앓고 있다.
    동물원 조련사의 머리가 아프지 않도록 우리가 2*N 배열에 사자를 배치하는 경우의 수가 몇 가지인지를 알아내는 프로그램을 작성해 주도록 하자.
    사자를 한마리도 배치하지 않는 경우도 하나의 경우의 수로 친다고 가정한다.

Input:
    첫째 줄에 우리의 크기 N이 주어진다.
    N은 10만 이하의 자연수이다.

Output:
    첫째 줄에 사자를 배치하는 경우의 수를 9901로 나눈 나머지를 출력하여라.
"""

def solution():
    """사자를 배치하는 경우의 수를 구해 출력한다.
    Extra explanation:
        i번째 우리의 오른쪽에 사자를 배치하는 경우 = i-1번쨰 우리의 왼쪽에 사자를 배치하는 경우 + i-1번째 우리가 비어있는 경우
        i번째 우리의 왼쪽에 사자를 배치하는 경우 = i-1번째 우리의 오른쪽에 사자를 배치하는 경우 + i-1번째 우리가 비어있는 경우
        i번째 우리가 비어있는 경우 = i-1번째 우리의 오른쪽에 사자를 배치하는 경우 + i-1번째 우리의 왼쪽에 사자를 배치하는 경우 + i-1번째 우리가 비어있는 경우
        위를 만족하도록 memoization을 활용해 문제를 해결한다.
    
    Variables:
        N : 우리의 세로칸 개수
        zoo : 우리에 사자를 배치하는 경우의 수
    
    Example:
        >>> 4       : input N
        >>> 41      : output result
    """
    N = int(input())

    zoo = [[0 for _ in range(3)] for _ in range(N+1)]
    zoo[1][0] = zoo[1][1] = zoo[1][2] = 1

    for i in range(2, N+1):
        zoo[i][0] = (zoo[i-1][1] + zoo[i-1][2]) % 9901
        zoo[i][1] = (zoo[i-1][0] + zoo[i-1][2]) % 9901
        zoo[i][2] = (zoo[i-1][0] + zoo[i-1][1] + zoo[i-1][2]) % 9901
        
    print(sum(zoo[N])%9901)

solution()